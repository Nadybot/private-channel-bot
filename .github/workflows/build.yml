name: Build binaries

on:
  push:
    branches:
      - unstable
      - stable
    tags:
      - '*'
  pull_request:

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install cross compilers
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf -y
      - name: Set up Rust for x86_64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src

      - name: Build for x86_64
        run: |
          cargo build --release --target=x86_64-unknown-linux-gnu
          strip target/x86_64-unknown-linux-gnu/release/private-channel-bot
          cp target/x86_64-unknown-linux-gnu/release/private-channel-bot private-channel-bot-linux-x86_64

      - name: Set up Rust for aarch64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: aarch64-unknown-linux-gnu
          override: true
          components: rust-src

      - name: Build for aarch64
        run: |
          cargo build --release --target=aarch64-unknown-linux-gnu
          aarch64-linux-gnu-strip target/aarch64-unknown-linux-gnu/release/private-channel-bot
          cp target/aarch64-unknown-linux-gnu/release/private-channel-bot private-channel-bot-linux-aarch64

      - name: Set up Rust for armv7
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: armv7-unknown-linux-gnueabihf
          override: true
          components: rust-src

      - name: Build for armv7
        run: |
          cargo build --release --target=armv7-unknown-linux-gnueabihf
          arm-linux-gnueabihf-strip target/armv7-unknown-linux-gnueabihf/release/private-channel-bot
          cp target/armv7-unknown-linux-gnueabihf/release/private-channel-bot private-channel-bot-linux-armv7

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: private-channel-bot-linux
          path: |
            private-channel-bot-linux-x86_64
            private-channel-bot-linux-aarch64
            private-channel-bot-linux-armv7

  freebsd:
    name: FreeBSD
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install toolchain
        run: |
          sudo apt install llvm clang -y
          mkdir freebsd_sysroot
          curl -s https://download.freebsd.org/ftp/releases/amd64/12.2-RELEASE/base.txz \
              | tar -xJf - -C freebsd_sysroot ./lib ./usr/lib ./usr/libdata ./usr/include ./usr/share/keys ./etc

      - name: Set up Rust for FreeBSD x86_64
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: x86_64-unknown-freebsd
          override: true
          components: rust-src

      - name: Build for FreeBSD x86_64
        run: |
          cargo build --release --target=x86_64-unknown-freebsd
          strip target/x86_64-unknown-freebsd/release/private-channel-bot
          cp target/x86_64-unknown-freebsd/release/private-channel-bot private-channel-bot-freebsd-x86_64

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: private-channel-bot-freebsd
          path: |
            private-channel-bot-freebsd-x86_64

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src

      - name: Build
        run: |
          cargo build --release --target=x86_64-apple-darwin
          strip target/x86_64-apple-darwin/release/private-channel-bot
          cp target/x86_64-apple-darwin/release/private-channel-bot private-channel-bot-macos

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: private-channel-bot-macos
          path: |
            private-channel-bot-macos

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src

      - name: Build
        run: |
          cargo build --release --target=x86_64-pc-windows-msvc
          cp target/x86_64-pc-windows-msvc/release/private-channel-bot.exe private-channel-bot-windows.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: private-channel-bot-windows
          path: |
            private-channel-bot-windows.exe
